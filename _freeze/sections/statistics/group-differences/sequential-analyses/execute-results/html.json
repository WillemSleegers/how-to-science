{
  "hash": "e3b09de33508bc6f0f2b37f8f90d84c0",
  "result": {
    "markdown": "---\ntitle: \"Sequential analyses\"\n---\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load packages\nlibrary(MASS)\nlibrary(tidyverse)\nlibrary(viridis)\nlibrary(brms)\nlibrary(emmeans)\n\n# Set the default ggplot theme\ntheme_set(theme_minimal())\n```\n:::\n\n\nThis section is about performing sequential analyses.\n\n## Bayesian\n\nLet's simulate data for a scenario in which we have 5 different between-subjects conditions. The conditions differ from each by a small amount and for simplicity's sake each condition has a standard deviation of 1.\n\nTo simplify the code for demonstrating a sequential analysis, we'll first simulate all the data and then draw samples from it, rather that simulating new data for each step.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Set the simulation parameters\nMs <- c(0, 0.1, 0.2, 0.3, 0.4)\nSDs <- 1\nn <- 1000\nlabels <- c(\"A\", \"B\", \"C\", \"D\", \"E\")\n\n# Produce the variance-covariance matrix\nSigma <- matrix(\n  nrow = length(Ms), \n  ncol = length(Ms), \n  data = c(\n    SDs^2, 0, 0, 0, 0,\n    0, SDs^2, 0, 0, 0,\n    0, 0, SDs^2, 0, 0,\n    0, 0, 0, SDs^2, 0,\n    0, 0, 0, 0, SDs^2\n  )\n)\n\n# Simulate\nm <- mvrnorm(n = n, mu = Ms, Sigma = Sigma, empirical = TRUE)\n\n# Prepare data\ncolnames(m) <- labels\n\ndata <- as_tibble(m)\n\ndata <- pivot_longer(\n  data = data, \n  cols = everything(), \n  names_to = \"condition\", \n  values_to = \"DV\"\n)\n\ndata <- mutate(data, id = 1:n(), .before = condition)\n```\n:::\n\n\nNow that we have some data we can draw samples from it, run a model, calculate the Bayes factor, and store the Bayes factor together with the cumulative sample size so we can create a plot for how the Bayes factor changes as we 'recruit' more participants.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nn_step <- 50\nbayes_factors <- tibble()\n\nfor (i in 1:(n / n_step)) {\n  # Draw a sample\n  sample <- slice_head(data, n = i * n_step)\n  \n  # Run the brm model\n  model <- brm(\n    formula = DV ~ 0 + Intercept + condition, \n    data = sample, \n    family = gaussian(), \n    prior = c(\n      set_prior(coef = \"Intercept\", prior = \"normal(0, 1)\"),\n      set_prior(class = \"b\", prior = \"normal(0, 1)\"),\n      set_prior(class = \"sigma\", prior = \"normal(1, 1)\")\n    ), \n    sample_prior = TRUE\n  )\n  \n  # Calculate the BF of a contrast\n  contrast <- hypothesis(model, \"conditionD - conditionB = 0\")\n  \n  # Add the information to the bayes factors data frame\n  bayes_factors <- bind_rows(\n    bayes_factors, \n    tibble(\n      step = i,\n      n = i * n_step,\n      BF = contrast$hypothesis$Evid.Ratio\n    )\n  )\n}\n```\n:::\n\n::: {.cell}\n\n:::\n\n\nNow we have a data frame that contains the Bayes factors for each step, so we can plot how the Bayes factor changes as we recruit more participants.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(bayes_factors, aes(x = n, y = log(BF))) +\n  geom_line() +\n  labs(x = \"n\", y = expression(BF[10])) +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![Sequential analysis](sequential-analyses_files/figure-html/sequential-bayes-factors-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "sequential-analyses_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": null
  }
}