{
  "hash": "8e715b4e6d0cf023390a692c9a2e4f2f",
  "result": {
    "markdown": "---\ntitle: \"Pairwise comparisons\"\n---\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load packages\nlibrary(MASS)\nlibrary(tidyverse)\nlibrary(viridis)\nlibrary(brms)\nlibrary(emmeans)\n\n# Set the default ggplot theme\ntheme_set(theme_minimal())\n```\n:::\n\n\nThis section is about different statistical techniques to analyze group differences.\n\n## Bayesian\n\n### Pairwise comparisons\n\nIn this scenario we simulate data from a study with 5 different groups. The conditions differ from each by a small amount and for simplicity's sake each condition has a standard deviation of 1. The sample size per condition is 250.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Set the simulation parameters\nMs <- c(0, 0.1, 0.2, 0.3, 0.4)\nSDs <- 1\nn <- 250\n\n# Produce the variance-covariance matrix\nSigma <- matrix(\n  nrow = 5, \n  ncol = 5, \n  data = c(\n    SDs, 0, 0, 0, 0,\n    0, SDs, 0, 0, 0,\n    0, 0, SDs, 0, 0,\n    0, 0, 0, SDs, 0,\n    0, 0, 0, 0, SDs\n  )\n)\n\n# Simulate the values\nm <- mvrnorm(n = n, mu = Ms, Sigma = Sigma, empirical = TRUE)\n\n# Prepare the data by converting it to a data frame and making it tidy\ncolnames(m) <- c(\"A\", \"B\", \"C\", \"D\", \"E\")\n\ndata <- as_tibble(m)\n\ndata <- pivot_longer(\n  data = data, \n  cols = everything(), \n  names_to = \"condition\", \n  values_to = \"DV\"\n)\n```\n:::\n\n\nTo perform the pairwise comparisons we first fit a model with `brms`. If we also want to calculate Bayes factors, we need to set a prior for the intercept. For technical reasons, this needs to be done by explicitly including the intercept in the formula. After that we need to set 3 priors: 1 for the intercept, 1 for all the other coefficients, and one for sigma. We'll set some weak priors because we don't have any additional information about this simulated data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel <- brm(\n  formula = DV ~ 0 + Intercept + condition, \n  data = data, \n  family = gaussian(), \n  prior = c(\n    set_prior(coef = \"Intercept\", prior = \"normal(0, 1)\"),\n    set_prior(class = \"b\", prior = \"normal(0, 1)\"),\n    set_prior(class = \"sigma\", prior = \"normal(0, 1)\")\n  ), \n  file = \"model\", \n  sample_prior = TRUE\n)\n\nmodel\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n Family: gaussian \n  Links: mu = identity; sigma = identity \nFormula: DV ~ 0 + Intercept + condition \n   Data: data (Number of observations: 1250) \n  Draws: 4 chains, each with iter = 2000; warmup = 1000; thin = 1;\n         total post-warmup draws = 4000\n\nPopulation-Level Effects: \n           Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS\nIntercept      0.00      0.07    -0.13     0.13 1.00     1042     1482\nconditionB     0.10      0.09    -0.08     0.28 1.00     1312     1684\nconditionC     0.20      0.09     0.01     0.38 1.00     1464     1901\nconditionD     0.30      0.09     0.12     0.47 1.00     1335     2185\nconditionE     0.39      0.09     0.22     0.58 1.00     1428     2006\n\nFamily Specific Parameters: \n      Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS\nsigma     1.00      0.02     0.96     1.04 1.00     3541     2636\n\nDraws were sampled using sampling(NUTS). For each parameter, Bulk_ESS\nand Tail_ESS are effective sample size measures, and Rhat is the potential\nscale reduction factor on split chains (at convergence, Rhat = 1).\n```\n:::\n:::\n\n\nThe estimates range, as expected, from 0 for the intercept to 0.40 for condition E.\n\nIf we want pairwise comparisons, we can use the `emmeans` package to obtain them. We use the `emmeans()` function and set the `specs` argument to `pairwise ~ condition`. `pairwise` is a reserved term to use for exactly this purpose. The result is an object that contains estimated marginal means and contrasts. Since we're interested in the pairwise comparisons we only print the contrasts.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nemmeans <- emmeans(model, specs = pairwise ~ condition)\nemmeans$contrasts\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n contrast estimate lower.HPD upper.HPD\n A - B     -0.0964    -0.272    0.0825\n A - C     -0.1952    -0.378   -0.0163\n A - D     -0.2962    -0.481   -0.1295\n A - E     -0.3926    -0.577   -0.2170\n B - C     -0.0992    -0.278    0.0689\n B - D     -0.1978    -0.366   -0.0250\n B - E     -0.2978    -0.468   -0.1298\n C - D     -0.0996    -0.281    0.0730\n C - E     -0.1991    -0.376   -0.0298\n D - E     -0.1009    -0.274    0.0732\n\nPoint estimate displayed: median \nHPD interval probability: 0.95 \n```\n:::\n:::\n\n\nThis gives us the estimates as well as lower and upper bounds of a highest probability density intervals. We can also plot them using the following code.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncontrasts <- as_tibble(emmeans$contrasts)\n\nggplot(contrasts, aes(x = contrast, y = estimate)) +\n  geom_pointrange(aes(ymin = lower.HPD, ymax = upper.HPD)) +\n  labs(x = \"Contrast\", y = \"Estimate with 95% HPD\")\n```\n\n::: {.cell-output-display}\n![Pairwise comparisons via `emmeans`](pairwise-comparisons_files/figure-html/pairwise-comparisons-plot-1.png){width=672}\n:::\n:::\n\n\nAlternatively, we can also calculate specific contrasts using the `hypothesis()` function from `brms`. The added value of calculating contrasts this way is that it also provides us with a Bayes factor if we set priors for all parts of the model.\n\nFor example, we can get the contrast between condition A and B by subtracting the Intercept from the condition B coefficient. We can then get a Bayes factor for the test that this value is larger than 0.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncontrast_A_B <- hypothesis(model, \"conditionB - Intercept > 0\")\ncontrast_A_B\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nHypothesis Tests for class b:\n                Hypothesis Estimate Est.Error CI.Lower CI.Upper Evid.Ratio\n1 (conditionB-Inter... > 0     0.09      0.14    -0.14     0.33       2.96\n  Post.Prob Star\n1      0.75     \n---\n'CI': 90%-CI for one-sided and 95%-CI for two-sided hypotheses.\n'*': For one-sided hypotheses, the posterior probability exceeds 95%;\nfor two-sided hypotheses, the value tested against lies outside the 95%-CI.\nPosterior probabilities of point hypotheses assume equal prior probabilities.\n```\n:::\n:::\n\n\nThis gives us an estimate of 0.1 (as expected) and a Bayes factor of 2.9564787.\n\nWe can also test whether this contrast is equal to 0.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncontrast_A_B_null <- hypothesis(model, \"conditionB - Intercept = 0\")\ncontrast_A_B_null\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nHypothesis Tests for class b:\n                Hypothesis Estimate Est.Error CI.Lower CI.Upper Evid.Ratio\n1 (conditionB-Inter... = 0     0.09      0.14    -0.19     0.38       7.83\n  Post.Prob Star\n1      0.89     \n---\n'CI': 90%-CI for one-sided and 95%-CI for two-sided hypotheses.\n'*': For one-sided hypotheses, the posterior probability exceeds 95%;\nfor two-sided hypotheses, the value tested against lies outside the 95%-CI.\nPosterior probabilities of point hypotheses assume equal prior probabilities.\n```\n:::\n:::\n\n\nThis gives us a Bayes factor of 7.830261.\n\nAlternatively, we can compare another contrast, say, D vs. B. We can get this contrast by subtracting the coefficient for condition B from the coefficient for condition D.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncontrast_D_B <- hypothesis(model, \"conditionD - conditionB > 0\")\ncontrast_D_B\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nHypothesis Tests for class b:\n                Hypothesis Estimate Est.Error CI.Lower CI.Upper Evid.Ratio\n1 (conditionD-condi... > 0      0.2      0.09     0.05     0.34      92.02\n  Post.Prob Star\n1      0.99    *\n---\n'CI': 90%-CI for one-sided and 95%-CI for two-sided hypotheses.\n'*': For one-sided hypotheses, the posterior probability exceeds 95%;\nfor two-sided hypotheses, the value tested against lies outside the 95%-CI.\nPosterior probabilities of point hypotheses assume equal prior probabilities.\n```\n:::\n:::\n\n\nAs expected, we see an estimate of 0.2 (0.4 - 0.2). We also see a Bayes factor of 92.0232558 for the test that this is larger than 0.\n",
    "supporting": [
      "pairwise-comparisons_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": null
  }
}